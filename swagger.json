{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple example NodeJS API project to demonstrate Swagger Documentation",
    "version": "1.0.0",
    "title": "Node Js REST API",
    "contact": {
      "email": "nodejsdevelopment@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "login",
      "description": "login actions",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://localhost:3000"
      }
    },
    {
      "name": "clinics",
      "description": "provide details of clinic",
      "externalDocs": {
        "description": "User Documents",
        "url": "http://localhost:3000"
      }
    },
    {
      "name": "doctor",
      "description": "provide details about doctor",
      "externalDocs": {
        "description": "User Documents",
        "url": "http://localhost:3000"
      }
    },
    {
      "name": "Reports",
      "description": "provide Reports",
      "externalDocs": {
        "description": "User Documents",
        "url": "http://localhost:3000"
      }
    }
  ],
  "paths": {
    "/login/signInForm": {
      "post": {
        "tags": [
          "login"
        ],
        "operationId": "login",
        "summary": "login user",
        "description": "login ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userLogin"
            }
          }
        ],
        "node_auth": [
          "write",
          "read"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "401": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/login/signUp": {
      "post": {
        "tags": [
          "login"
        ],
        "operationId": "registerUser",
        "summary": "register user",
        "description": "register user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "task object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "$ref": "#/definitions/Task"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/createUser": {
      "post": {
        "tags": [
          "login"
        ],
        "operationId": "createUser",
        "summary": "create a new user",
        "description": "create a new user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "user object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "$ref": "#/definitions/Task"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/updateUserById/{id}": {
      "put": {
        "tags": [
          "login"
        ],
        "summary": "Update the user",
        "description": "Update the user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "email id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "task object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "$ref": "#/definitions/Task"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/deleteUserById/{id}": {
      "delete": {
        "tags": [
          "login"
        ],
        "summary": "Delete the user",
        "description": "Delete the user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "email id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/fetchUserProfile/{id}": {
      "get": {
        "tags": [
          "login"
        ],
        "summary": "get profile details of the user",
        "description": "get profile details of the user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "email id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/userProfileResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          },
          "401": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/createDoctorProfile": {
      "post": {
        "tags": [
          "doctor"
        ],
        "operationId": "createDoctor",
        "summary": "create doctor profile",
        "description": "create doctor profile",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "user object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "$ref": "#/definitions/Task"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/updateDoctorProfileById/{id}": {
      "put": {
        "tags": [
          "doctor"
        ],
        "operationId": "updateDoctorProfile",
        "summary": "update doctor profile",
        "description": "update doctor profile",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "profile id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/deleteDoctorProfileById/{id}": {
      "delete": {
        "tags": [
          "doctor"
        ],
        "operationId": "deleteDoctor",
        "summary": "delete doctor profile",
        "description": "delete doctor profile",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "profile id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/fetchDoctorById/{id}": {
      "get": {
        "tags": [
          "doctor"
        ],
        "operationId": "fetchDoctor",
        "summary": "fetch doctor profile",
        "description": "fetch doctor profile",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "profile id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/fetchDoctorBySpecilization/{specialization_id}": {
      "get": {
        "tags": [
          "doctor"
        ],
        "operationId": "fetchDoctorBySpecialization",
        "summary": "fetch doctor profile by specialization",
        "description": "fetch doctor profile by specialization",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "specialization_id",
            "in": "path",
            "description": "profile id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/fetchAppointmentsByDoctorId/{id}": {
      "get": {
        "tags": [
          "doctor"
        ],
        "operationId": "fetchDoctorAppointments",
        "summary": "fetch doctor appointments",
        "description": "fetch doctor appointments",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "profile id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/fetchDoctorsByLocation/{location}": {
      "get": {
        "tags": [
          "doctor"
        ],
        "operationId": "fetchDoctorsByLocation",
        "summary": "fetch doctor appointments",
        "description": "fetch doctor appointments",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "location of the area",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/todosResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "userLogin": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "profile": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "userProfileResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "profile": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "appoitnment": {
          "type": "object"
        },
        "report": {
          "type": "object"
        }
      }
    },
    "todosResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "task": {
          "type": "string"
        },
        "assignee": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "task": {
          "type": "string"
        },
        "assignee": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "InvalidResponse": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "node_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://localhost:3000/oauth/authorize",
      "flows": "implicit",
      "scopes": {
        "read": "read",
        "write": "modify"
      }
    }
  }
}